name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend Docker image
      run: |
        docker build -t maniteja2601/wellness-backend:latest -f backend/Dockerfile ./backend
        docker push maniteja2601/wellness-backend:latest

    - name: Build and push frontend Docker image
      run: |
        docker build -t maniteja2601/wellness-frontend:latest -f frontend/Dockerfile ./frontend
        docker push maniteja2601/wellness-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull maniteja2601/wellness-backend:latest
          docker pull maniteja2601/wellness-frontend:latest
          
          # Stop and remove existing containers
          docker stop backend-container || true
          docker rm backend-container || true
          docker stop frontend-container || true
          docker rm frontend-container || true
          
          # Run the new containers
          docker run -d --name backend-container -p 8080:8080 maniteja2601/wellness-backend:latest
          docker run -d --name frontend-container -p 80:80 maniteja2601/wellness-frontend:latest
        EOF
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
