name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend Docker image
      run: |
        docker build -t maniteja2601/wellness-backend:latest -f backend/Dockerfile ./backend
        docker push maniteja2601/wellness-backend:latest

    - name: Build and push frontend Docker image
      run: |
        docker build -t maniteja2601/wellness-frontend:latest -f frontend/Dockerfile ./frontend
        docker push maniteja2601/wellness-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH key
      run: |
        echo "$EC2_SSH_PRIVATE_KEY" > private-key.pem
        chmod 600 private-key.pem

    - name: Deploy to EC2
      env:
        EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private-key.pem ec2-user@$EC2_PUBLIC_IP << 'EOF'
          docker pull maniteja2601/wellness-backend:latest
          docker pull maniteja2601/wellness-frontend:latest
          docker-compose up -d
        EOF
