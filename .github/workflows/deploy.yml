name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend Docker image
      run: |
        docker build -t maniteja2601/wellness-backend:latest -f backend/Dockerfile ./backend
        docker push maniteja2601/wellness-backend:latest

    - name: Build and push frontend Docker image
      run: |
        docker build -t maniteja2601/wellness-frontend:latest -f frontend/Dockerfile ./frontend
        docker push maniteja2601/wellness-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ${{ secrets.EC2_SSH_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "VITE_BACKEND_API=http://localhost:3001/api/v1/retreats" > frontend/.env
          echo "VITE_BOOKING_API=http://localhost:3001/api/v1/book" >> frontend/.env
          sudo docker pull maniteja2601/wellness-backend:latest
            sudo docker pull maniteja2601/wellness-frontend:latest
            sudo docker stop wellness-backend || true
            sudo docker rm wellness-backend || true
            sudo docker stop wellness-frontend || true
            sudo docker rm wellness-frontend || true
            sudo docker run -d --name wellness-backend -p 3001:3001 --env-file .env maniteja2601/wellness-backend:latest
            sudo docker run -d --name wellness-frontend -p 80:3000 maniteja2601/wellness-frontend:latest